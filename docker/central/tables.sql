CREATE TABLE USER_(
    ID_USER INT AUTO_INCREMENT,
    EMAIL_ADDRESS VARCHAR(320) NOT NULL,
    PASSWORD_HASH CHAR(128),
    PASSWORD_HASH_SALT CHAR(128),
    FIRST_NAME VARCHAR(64) NOT NULL,
    LAST_NAME VARCHAR(64) NOT NULL,
    SUBSCRIPTION_START DATE NOT NULL,
    SUBSCRIPTION_END DATE,
    PRIMARY KEY(ID_USER),
    UNIQUE(EMAIL_ADDRESS)
);

-- Reference tables

CREATE TABLE PHONE(
    ID_PHONE INT AUTO_INCREMENT,
    NAME VARCHAR(32) NOT NULL,
    NUMBER VARCHAR(16) NOT NULL,
    PRIMARY KEY(ID_PHONE),
    UNIQUE(NUMBER)
);

CREATE TABLE CATEGORY(
    ID_CATEGORY INT AUTO_INCREMENT,
    NAME VARCHAR(32) NOT NULL,
    ICON_NAME VARCHAR(16) NOT NULL,
    ID_CATEGORY_1 INT,
    PRIMARY KEY(ID_CATEGORY),
    UNIQUE(NAME),
    FOREIGN KEY(ID_CATEGORY_1) REFERENCES CATEGORY(ID_CATEGORY)
);

CREATE TABLE VIDEO_TYPE(
    ID_VIDEO_TYPE INT AUTO_INCREMENT,
    NAME VARCHAR(32) NOT NULL,
    PRIMARY KEY(ID_VIDEO_TYPE),
    UNIQUE(NAME)
);

CREATE TABLE MOOD_TYPE(
    ID_MOOD_TYPE INT AUTO_INCREMENT,
    NAME VARCHAR(32) NOT NULL,
    IMPACT TINYINT NOT NULL,
    PRIMARY KEY(ID_MOOD_TYPE),
    UNIQUE(NAME),
    UNIQUE(IMPACT)
);

CREATE TABLE PHYSICAL_ACTIVITY_TYPE(
    ID_PHYSICAL_ACTIVITY_TYPE INT AUTO_INCREMENT,
    NAME VARCHAR(32) NOT NULL,
    KILOCALORIES_SPENT_HOURLY SMALLINT NOT NULL,
    PRIMARY KEY(ID_PHYSICAL_ACTIVITY_TYPE),
    UNIQUE(NAME)
);

-- Data tables

CREATE TABLE TEMPORARY_CODE(
    ID_TEMPORARY_CODE INT AUTO_INCREMENT,
    VALUE_ CHAR(6) NOT NULL,
    EXPIRATION DATETIME NOT NULL,
    ID_USER INT NOT NULL,
    PRIMARY KEY(ID_TEMPORARY_CODE),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER)
);

CREATE TABLE TOKEN(
    ID_TOKEN INT AUTO_INCREMENT,
    VALUE_ CHAR(128) NOT NULL,
    EXPIRATION DATETIME NOT NULL,
    ID_USER INT NOT NULL,
    PRIMARY KEY(ID_TOKEN),
    UNIQUE(VALUE_),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER)
);

CREATE TABLE VIDEO(
    ID_VIDEO INT AUTO_INCREMENT,
    NAME VARCHAR(64) NOT NULL,
    DESCRIPTION VARCHAR(1024),
    URL CHAR(41) NOT NULL,
    ID_VIDEO_TYPE INT NOT NULL,
    ID_CATEGORY INT NOT NULL,
    PRIMARY KEY(ID_VIDEO),
    UNIQUE(URL),
    FOREIGN KEY(ID_VIDEO_TYPE) REFERENCES VIDEO_TYPE(ID_VIDEO_TYPE),
    FOREIGN KEY(ID_CATEGORY) REFERENCES CATEGORY(ID_CATEGORY)
);

CREATE TABLE HEIGHT(
    ID_HEIGHT INT AUTO_INCREMENT,
    TIME_ DATETIME NOT NULL,
    CENTIMETERS SMALLINT NOT NULL,
    ID_USER INT NOT NULL,
    PRIMARY KEY(ID_HEIGHT),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER)
);

CREATE TABLE WEIGHT(
    ID_WEIGHT INT AUTO_INCREMENT,
    TIME_ DATETIME NOT NULL,
    KILOGRAMS FLOAT NOT NULL,
    ID_USER INT NOT NULL,
    PRIMARY KEY(ID_WEIGHT),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER)
);

CREATE TABLE PRODUCT(
    ID_PRODUCT INT AUTO_INCREMENT,
    CODE VARCHAR(16) NOT NULL,
    NAME VARCHAR(128),
    KILOCALORIES_FOR_HUNDRED_GRAMS SMALLINT,
    PROTEIN_GRAMS_FOR_HUNDRED_GRAMS FLOAT,
    FIBER_GRAMS_FOR_HUNDRED_GRAMS FLOAT,
    FAT_GRAMS_FOR_HUNDRED_GRAMS FLOAT,
    SUGAR_GRAMS_FOR_HUNDRED_GRAMS FLOAT,
    SALT_GRAMS_FOR_HUNDRED_GRAMS FLOAT,
    PRIMARY KEY(ID_PRODUCT),
    UNIQUE(CODE)
);

CREATE TABLE CONSUMED_PRODUCT(
    ID_CONSUMED_PRODUCT INT AUTO_INCREMENT,
    TIME_ DATETIME NOT NULL,
    GRAMS SMALLINT NOT NULL,
    ID_USER INT NOT NULL,
    ID_PRODUCT INT NOT NULL,
    PRIMARY KEY(ID_CONSUMED_PRODUCT),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER),
    FOREIGN KEY(ID_PRODUCT) REFERENCES PRODUCT(ID_PRODUCT)
);

CREATE TABLE MOOD(
    ID_MOOD INT AUTO_INCREMENT,
    TIME_ DATETIME NOT NULL,
    ID_MOOD_TYPE INT NOT NULL,
    ID_USER INT NOT NULL,
    PRIMARY KEY(ID_MOOD),
    FOREIGN KEY(ID_MOOD_TYPE) REFERENCES MOOD_TYPE(ID_MOOD_TYPE),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER)
);

CREATE TABLE SLEEP(
    ID_SLEEP INT AUTO_INCREMENT,
    TIME_ DATETIME NOT NULL,
    MINUTES SMALLINT NOT NULL,
    ID_USER INT NOT NULL,
    PRIMARY KEY(ID_SLEEP),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER)
);

CREATE TABLE PHYSICAL_ACTIVITY(
    ID_PHYSICAL_ACTIVITY INT AUTO_INCREMENT,
    TIME_ DATETIME NOT NULL,
    MINUTES SMALLINT,
    ID_USER INT NOT NULL,
    ID_PHYSICAL_ACTIVITY_TYPE INT NOT NULL,
    PRIMARY KEY(ID_PHYSICAL_ACTIVITY),
    FOREIGN KEY(ID_USER) REFERENCES USER_(ID_USER),
    FOREIGN KEY(ID_PHYSICAL_ACTIVITY_TYPE) REFERENCES PHYSICAL_ACTIVITY_TYPE(ID_PHYSICAL_ACTIVITY_TYPE)
);